################################################################################
# functions
################################################################################
#
has() { type "$1" &> /dev/null ; } 

# trash [file(s)...]
trash() {
  local trash_dir="$HOME/Trash"
  mkdir -p "$trash_dir" && mv -b -t "$trash_dir" -- "$@"
}

# find-up [file]
#
# test existence of [file], traversing up from CWD.
# on match print path and return, else return 1.
find-up() {
  local file="${1:-.git}"

  source_path="$(realpath -sm .)" || return 1
  while [[ "${source_path}" != "/" ]]; do
    if [[ -e "${source_path}/$name" ]]; then
      printf '%s\n' "$source_path"
      return 0
    fi
    source_path="$(dirname "$source_path")"
  done
  return 1
}

uefi-or-bios() {
  [ -d /sys/firmware/efi ] && echo 'UEFI' || echo 'Legacy BIOS/CSM'
}

#du -hax "${1:-/}" 2> /dev/null | sort -nr | head -n 30
disk-space() {
  printf "Checking %s...\n" "$(realpath -s "${1:-.}")"
  (cd "${1:-.}" && du -Lhsx ./* 2> /dev/null | sort -rh | head -20)
}

# password-generate [length]
#
# generate password 
password-generate() {
  tr -dc "a-zA-Z0-9\!%^&;:" < /dev/urandom | fold -w "${1:-16}" | head -n 1
}

is-url() {
  regex='(https?|ftp|file)://[-[:alnum:]\+&@#/%?=~_|!:,.;]*[-[:alnum:]\+&@#/%=~_|]'
  [[ $1 =~ $regex ]]
}

man-url() {
  if [[ -n "${1:-}" ]] && is-url "${1:-}"; then
    /usr/bin/man <(curl -s "${1:-}")
  else
    /usr/bin/man "$@"
  fi
}

################################################################################
# generic environment stuff
################################################################################

# history
HISTCONTROL=ignoredups:erasedups
HISTSIZE=100000
HISTFILESIZE=100000
SAVEHIST=100000
export HISTCONTROL HISTSIZE HISTFILESIZE SAVEHIST

# editor
GIT_EDITOR=nvim
VISUAL=nvim
EDITOR=nvim
export GIT_EDITOR VISUAL EDITOR

# PATH's
GOPATH="$HOME"/.local/go
PONYPATH="$HOME"/.local/share/ponyup
EMACSPATH="$HOME"/.emacs.d
FLUTTERPATH="$HOME"/.local/flutter
DENO_INSTALL="$HOME/.deno"
NIMPATH="$HOME/.nimble"
CARGOPATH="$HOME/.cargo"
BUN_INSTALL="$HOME/.bun"
RTXPATH="$HOME/.local/share/rtx"
PNPM_HOME="$HOME/.local/share/pnpm"
export GOPATH PONYPATH EMACSPATH FLUTTERPATH DENO_INSTALL NIMPATH CARGOPATH BUN_INSTALL RTXPATH PNPM_HOME

X="$HOME/.local/bin:$GOPATH/bin:$EMACSPATH/bin:$FLUTTERPATH/bin:$PNPM_HOME"
X="$X:$CARGOPATH/bin:$BUN_INSTALL/bin:$PONYPATH/bin:$DENO_INSTALL/bin:$NIMPATH/bin:$RTXPATH/bin"
PATH="$X:$PATH"
export PATH

# source environments
if [[ -f "$HOME"/.cargo/env ]]; then
  source "$HOME"/.cargo/env
fi

# colors
export COLORTERM=truecolor
export LESS_TERMCAP_mb=$'\e[1;32m'
export LESS_TERMCAP_md=$'\e[1;32m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;31m'

#export GNUTERM="sixelgd size 1280,360 font arial 10"
################################################################################
# activate rtx
################################################################################
if command -v "rtx" > /dev/null 2>&1; then
  eval "$(rtx activate)"
  eval "$(rtx hook-env)"
fi

################################################################################
# create aliases based on the installed tools
################################################################################
if has exa; then 
  alias ls='exa --octal-permissions --color=always -g --icons --git --sort new'
else
  alias ls='ls --color'
fi

has fnm         &&  eval "$(fnm env)" 
has prettyping  &&  alias ping='prettyping --nolegend'
has btm         &&  alias btm='btm --battery --color gruvbox'
has fnm         &&  alias nvm='fnm'
has nvim        &&  alias vim='nvim'
has python3     &&  alias httpd='python3 -m http.server' 
has less        &&  alias less='less -R'
has apt-file    &&  alias whathas='apt-file search'
has dpkg        &&  alias apt-provides='dpkg -S'
has tmux        &&  alias mux='tmux new -A -s km'
has man         &&  alias man='man-url'
has ls          &&  alias lsd='ls -ld'
has stat        &&  alias stat-fs='stat -fc "%T"'
has glow        &&  alias glow='glow -p'
has shfmt       &&  alias shfmt='shfmt -i 2 -ci -bn'
has shfmt       &&  alias shfmt-diff='shfmt -d -i 2 -ci -bn'
has shfmt       &&  alias shfmt-write='shfmt -w -i 2 -ci -bn'
has wsl.exe     &&  alias shutdown='wsl.exe --shutdown'
has wsl.exe     &&  alias terminate='wsl.exe --terminate $WSL_DISTRO_NAME'
has npm         &&  alias vite='npm create vite@latest' 
has rsync       &&  alias cprs='rsync -avuP'
has rsync       &&  alias rscp='rsync -avuP'
