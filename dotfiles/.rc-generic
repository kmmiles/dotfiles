################################################################################
# some user facing functions
################################################################################

# gitRootDir [source_path]
#
# Print git root dir of [source_path].
# Defaults to current working dir if [source_path] not supplied 
#
# Returns: 
#   0 git root dir found
#   1 git root dir not found
gitRootDir() {
  local source_path

  source_path="$(realpath -sm "${*:-.}")" || return 1
  while [[ "${source_path}" != "/" ]]; do
    if [[ -d "${source_path}/.git" ]]; then
      printf '%s\n' "$source_path"
      return 0
    fi
    source_path="$(dirname "$source_path")"
  done
  return 1
}

uefi-or-bios() {
  [ -d /sys/firmware/efi ] && echo 'UEFI' || echo 'Legacy BIOS/CSM'
}

#du -hax "${1:-/}" 2> /dev/null | sort -nr | head -n 30
disk-space() {
  printf "Checking %s...\n" "$(realpath -s "${1:-.}")"
  (cd "${1:-.}" && du -hsx ./* 2> /dev/null | sort -rh | head -10)
}

new-password() {
  tr -dc "a-zA-Z0-9\!%^&;:" < /dev/urandom | fold -w "${1:-16}" | head -n 1
}

man-url() {
  regex='(https?|ftp|file)://[-[:alnum:]\+&@#/%?=~_|!:,.;]*[-[:alnum:]\+&@#/%=~_|]'
  if [[ $1 =~ $regex ]]; then 
    /usr/bin/man <(curl -s "$1")
  else
    /usr/bin/man "$@"
  fi
}

################################################################################
# generic environment stuff
################################################################################

# history
HISTCONTROL=ignoredups:erasedups
HISTSIZE=100000
HISTFILESIZE=100000
SAVEHIST=100000
export HISTCONTROL HISTSIZE HISTFILESIZE SAVEHIST

# editor
GIT_EDITOR=nvim
VISUAL=nvim
EDITOR=nvim
export GIT_EDITOR VISUAL EDITOR

# PATH's
GOPATH="$HOME"/.local/go
PONYPATH="$HOME"/.local/share/ponyup
EMACSPATH="$HOME"/.emacs.d
FLUTTERPATH="$HOME"/.local/flutter
DENO_INSTALL="$HOME/.deno"
NIMPATH="$HOME/.nimble"

PATH="$HOME/.local/bin:$GOPATH/bin:$EMACSPATH/bin:$FLUTTERPATH/bin:$PONYPATH/bin:$DENO_INSTALL/bin:$NIMPATH/bin:$PATH"
export PATH GOPATH PONYPATH EMACSPATH FLUTTERPATH DENOINSTALL NIMPATH

# colors
export COLORTERM=truecolor
export LESS_TERMCAP_mb=$'\e[1;32m'
export LESS_TERMCAP_md=$'\e[1;32m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;31m'

################################################################################
# create aliases based on the installed tools
################################################################################
has() { type "$1" &> /dev/null ; } 

if has exa; then 
  alias ls='exa --color=always -g --icons --git --sort new'
else
  alias ls='ls --color'
fi

has fnm         &&  eval "$(fnm env)" || :
has prettyping  &&  alias ping='prettyping --nolegend' || :
has btm         &&  alias btm='btm --battery --color gruvbox' || :
has fnm         &&  alias nvm='fnm' || :
has nvim        &&  alias vim='nvim' || :
has python3     &&  alias httpd='python3 -m http.server' || :
has less        &&  alias less='less -R' || :
has apt-file    &&  alias whathas='apt-file search' || :
has dpkg        &&  alias apt-provides='dpkg -S' || :
has tmux        &&  alias mux='tmux new -A -s km' || :
has man         &&  alias man='man-url' || :
has ls          &&  alias lsd='ls -ld' || :
has stat        &&  alias stat-fs='stat -fc "%T"'
has glow        &&  alias glow='glow -p'

# old x11 for wsl2
if has wslpath && [[ ! -d "/mnt/wslg" ]]; then
  DISPLAY=$(grep nameserver /etc/resolv.conf | awk '{print $2; exit;}'):0.0
  export DISPLAY
fi

if [[ -f "$HOME"/.cargo/env ]]; then
  source "$HOME"/.cargo/env
fi

# init starship if it's installed
if command -v "starship" > /dev/null 2>&1; then
  eval "$(starship init zsh)"
fi

# bun
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# wasmedge
if [[ -f "$HOME/.wasmedge/env" ]]; then
  source "$HOME/.wasmedge/env"
fi

